unit SysFormularioBuscador_Unit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, PadraoBuscadorFiltro_Unit,
  Datasnap.Provider, Data.DB, Data.Win.ADODB, Datasnap.DBClient, System.Actions,
  Vcl.ActnList, Vcl.StdCtrls, Vcl.Mask, Vcl.ExtCtrls, Vcl.Buttons;

type
  TSys_FormularioBuscador = class(TPadraoBuscadorFiltro)
    Panel4: TPanel;
    TXT_Valor2_Descricao: TMaskEdit;
    CBX_OperadorDescricao: TComboBox;
    TXT_Valor1_Descricao: TMaskEdit;
    Panel5: TPanel;
    PNL_SinalDescricao: TPanel;
    CBX_Igual_Descricao: TComboBox;
    Panel19: TPanel;
    TXT_Valor2_Restrincao: TMaskEdit;
    CBX_OperadorRestrincao: TComboBox;
    TXT_Valor1_Restrincao: TMaskEdit;
    Panel20: TPanel;
    PNL_SinalRestrincao: TPanel;
    CBX_Igual_Restrincao: TComboBox;

    // MInhas Procedures e Functions
    procedure GetRegistroParaComboQuandoOperadorForIgual(PLC_Tabela : String; PLC_Campo : String; ComboboxLista: TCombobox);

    procedure PNL_SinalClick(Sender: TObject);
    procedure PNL_SinalDescricaoClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure CBX_OperadorDescricaoChange(Sender: TObject);
    procedure CBX_Igual_DescricaoChange(Sender: TObject);
    procedure CBX_OperadorChange(Sender: TObject);
    procedure BNT_CancelarClick(Sender: TObject);
    procedure BNT_ConfirmarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Sys_FormularioBuscador: TSys_FormularioBuscador;

implementation

{$R *.dfm}

uses SysFormularioCadastro_Unit, ConexaoDados_Unit;

procedure TSys_FormularioBuscador.GetRegistroParaComboQuandoOperadorForIgual(PLC_Tabela : String; PLC_Campo : String; ComboboxLista: TCombobox);
Var
    Query : TADOQuery;
    VLC_Select : String;
    VLN_Contador : Integer;
begin

  VLC_Select := ' Select ' + PLC_Campo + ' from ' + PLC_Tabela + ' (nolock) ' + #13;
  VLC_Select := VLC_Select + ' Order by ' + PLC_Campo;

  MemoSQL.Lines.Text := VLC_Select;

  Query := TADOQuery.Create(self);
  With Query do
  begin
      Close;
      Connection := Sys_ModuloConexaoDados.ADOConnection1;
      SQL.Clear;
      SQL.Text := VLC_Select;
      Open;
  end;

  ComboboxLista.Visible := True;
  ComboboxLista.Left := 333;
  ComboboxLista.Items.Clear;
  ComboboxLista.Text := Query.FieldByName(PLC_Campo).AsString;

  For VLN_Contador := 0 To Query.RecordCount - 1 do
  begin
     ComboboxLista.Items.Add(Query.FieldByName(PLC_Campo).AsString);
     Query.Next;
  end;
  Query.Free;

end;

procedure TSys_FormularioBuscador.BNT_CancelarClick(Sender: TObject);
begin
  inherited;
  Close;
end;

procedure TSys_FormularioBuscador.BNT_ConfirmarClick(Sender: TObject);
Var
   VLC_Select, VLC_Where, VLC_Order : String;
begin

   VLC_Select := ' Select * from BomixBI.[dbo].[Sys_TB_Formulario] (nolock) ' + #13;
   VLC_Select := VLC_Select + ' Where 1=1';
   VLC_Order := '	Order by Descricao';

   If PadraoBuscadorFiltro.RetornarWhereFiltro(CBX_Operador,PNL_Sinal,TXT_Valor1,TXT_Valor2,'Formulario_ID','Numero') <> '' then
       VLC_Where := 'AND ' + PadraoBuscadorFiltro.RetornarWhereFiltro(CBX_Operador,PNL_Sinal,TXT_Valor1,TXT_Valor2,'Formulario_ID','Numero');

   If PadraoBuscadorFiltro.RetornarWhereFiltro(CBX_OperadorDescricao,PNL_SinalDescricao,TXT_Valor1_Descricao,TXT_Valor2_Descricao,'Descricao','Caracter') <> '' then
       VLC_Where := 'AND ' + PadraoBuscadorFiltro.RetornarWhereFiltro(CBX_OperadorDescricao,PNL_SinalDescricao,TXT_Valor1_Descricao,TXT_Valor2_Descricao,'Descricao','Caracter');

    With Sys_FormularioCadastro Do
    begin
        Memo_Query.Lines.Text := (VLC_Select + ' ' + VLC_Where + ' ' + VLC_Order);
        CDS.Close;
        Query.SQL.Clear;
        Query.SQL.Text := (VLC_Select + ' ' + VLC_Where + ' ' + VLC_Order);
        CDS.Active := True;
    end;

    If  Sys_FormularioCadastro.CDS.RecordCount = 0 then
    begin
        Application.MessageBox('Nenhum registro encontrado!','Atenção',mb_iconwarning + mb_ok);
        Exit;
    end
    else
    begin
        Close;
    end;

end;

procedure TSys_FormularioBuscador.CBX_Igual_DescricaoChange(Sender: TObject);
begin
  inherited;
  if CBX_Igual_Descricao.Text <> '' then
      TXT_Valor1_Descricao.Text := CBX_Igual_Descricao.Text;
end;

procedure TSys_FormularioBuscador.CBX_OperadorChange(Sender: TObject);
begin
  inherited;
  PadraoBuscadorFiltro.OrganizarCampos(CBX_Operador, TXT_Valor1, TXT_Valor2, 160,'');

end;

procedure TSys_FormularioBuscador.CBX_OperadorDescricaoChange(Sender: TObject);
begin
  inherited;
   PadraoBuscadorFiltro.OrganizarCampos(CBX_OperadorDescricao, TXT_Valor1_Descricao, TXT_Valor2_Descricao, 160,'');

   if CBX_OperadorDescricao.Text = 'Igual' then
   begin
       GetRegistroParaComboQuandoOperadorForIgual('BomixBI.[dbo].[Sys_TB_Formulario]','Descricao',CBX_Igual_Descricao);
       TXT_Valor1_Descricao.Text := CBX_Igual_Descricao.Text;
   end
   else
       CBX_Igual_Descricao.Visible := False;

end;

procedure TSys_FormularioBuscador.FormCreate(Sender: TObject);
Var
   TamanhoPadrao : Integer;
begin
   inherited;
   TamanhoPadrao := 160;
   TXT_Valor1.Width := (TamanhoPadrao * 2) + 1;
   TXT_Valor1_Descricao.Width := (TamanhoPadrao * 2) + 1;
end;

procedure TSys_FormularioBuscador.PNL_SinalClick(Sender: TObject);
begin
  inherited;
  PadraoBuscadorFiltro.DefinirPolaridade(PNL_Sinal);
end;

procedure TSys_FormularioBuscador.PNL_SinalDescricaoClick(Sender: TObject);
begin
  inherited;
  PadraoBuscadorFiltro.DefinirPolaridade(PNL_SinalDescricao);
end;

end.
