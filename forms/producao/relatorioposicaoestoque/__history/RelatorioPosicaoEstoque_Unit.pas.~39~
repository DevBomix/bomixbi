unit RelatorioPosicaoEstoque_Unit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, PadraoBuscadorFiltro_Unit, Vcl.StdCtrls,
  Vcl.ExtCtrls, System.Actions, Vcl.ActnList, Vcl.Buttons, Vcl.Mask, Data.DB,
  Data.Win.ADODB;

type
  TRelatorio_PosicaoEstoque = class(TPadraoBuscadorFiltro)
    Panel4: TPanel;
    Shape1: TShape;
    Edit25: TEdit;
    CBX_TipoRelatorio: TComboBox;
    Panel7: TPanel;
    TXT_Valor2_Armazem: TMaskEdit;
    CBX_OperadorArmazem: TComboBox;
    TXT_Valor1_Armazem: TMaskEdit;
    Panel8: TPanel;
    PNL_SinalArmazem: TPanel;
    CBX_Igual_Armazem: TComboBox;
    Panel2: TPanel;
    TXT_Valor2_ProdutoID: TMaskEdit;
    CBX_OperadorProdutoID: TComboBox;
    TXT_Valor1_ProdutoID: TMaskEdit;
    Panel3: TPanel;
    PNL_SinalProdutoID: TPanel;
    CBX_Igual_ProdutoID: TComboBox;
    Panel5: TPanel;
    TXT_Valor2_Produto: TMaskEdit;
    CBX_OperadorProduto: TComboBox;
    TXT_Valor1_Produto: TMaskEdit;
    Panel6: TPanel;
    PNL_SinalProduto: TPanel;
    CBX_Igual_Produto: TComboBox;
    Panel1: TPanel;
    MaskEdit1: TMaskEdit;
    ComboBox1: TComboBox;
    MaskEdit2: TMaskEdit;
    Panel9: TPanel;
    Panel10: TPanel;
    CBX_Igual_Desbloqueado: TComboBox;
    Panel11: TPanel;
    MaskEdit3: TMaskEdit;
    ComboBox3: TComboBox;
    MaskEdit4: TMaskEdit;
    Panel12: TPanel;
    Panel13: TPanel;
    CBX_Igual_DataValidade: TComboBox;
    Panel14: TPanel;
    MaskEdit5: TMaskEdit;
    ComboBox2: TComboBox;
    MaskEdit6: TMaskEdit;
    Panel15: TPanel;
    Panel16: TPanel;
    CBX_Igual_Desbalanceado: TComboBox;
    Panel17: TPanel;
    MaskEdit7: TMaskEdit;
    ComboBox4: TComboBox;
    MaskEdit8: TMaskEdit;
    Panel18: TPanel;
    Panel19: TPanel;
    CBX_Igual_SaldoNegativo: TComboBox;
    Panel20: TPanel;
    TXT_Valor2_TipoProduto: TMaskEdit;
    CBX_OperadorTipoProduto: TComboBox;
    TXT_Valor1_TipoProduto: TMaskEdit;
    Panel21: TPanel;
    PNL_SinalTipoProduto: TPanel;
    CBX_Igual_TipoProduto: TComboBox;

    // Minhas Procedure e Functions
    procedure ListarArmazem;

    procedure FormCreate(Sender: TObject);
    procedure DesenvolvimentoExecute(Sender: TObject);
    procedure MemoSQLDblClick(Sender: TObject);
    procedure BNT_ConfirmarClick(Sender: TObject);
    procedure PNL_SinalClick(Sender: TObject);
    procedure PNL_SinalProdutoIDClick(Sender: TObject);
    procedure PNL_SinalProdutoClick(Sender: TObject);
    procedure CBX_OperadorChange(Sender: TObject);
    procedure CBX_OperadorProdutoIDChange(Sender: TObject);
    procedure CBX_OperadorProdutoChange(Sender: TObject);
    procedure BNT_CancelarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Relatorio_PosicaoEstoque: TRelatorio_PosicaoEstoque;

implementation

{$R *.dfm}

uses FuncaoSistema_Unit, ConexaoDados_Unit,
  RelatorioPosicaoEstoque_AcompanhamentoItens_Unit,
  RelatorioPosicaoEstoqueSaldo_Unit, relatorioposicaoestoquesaldoperda_unit;

procedure TRelatorio_PosicaoEstoque.BNT_CancelarClick(Sender: TObject);
begin
  inherited;
  Close;

end;

procedure TRelatorio_PosicaoEstoque.BNT_ConfirmarClick(Sender: TObject);
begin
    inherited;

    if CBX_TipoRelatorio.Text = 'RELATÓRIO DE SALDO DE ESTOQUE POR LOTE' then
    begin

          Application.CreateForm(TRelatorio_PosicaoEstoque_AcompanhamentoItens, Relatorio_PosicaoEstoque_AcompanhamentoItens);
          try

                 If Relatorio_PosicaoEstoque_AcompanhamentoItens.ImprimirRelatorio = False then
                 begin
                      Application.MessageBox('Nenhum registro encontrado!','Atenção',mb_iconwarning + mb_ok);
                      Exit;
                 end
                 else
                 begin
                    Relatorio_PosicaoEstoque_AcompanhamentoItens.ppRelatorio.PrintReport;
                 end;

          finally

                 Relatorio_PosicaoEstoque_AcompanhamentoItens.Release;
                 Relatorio_PosicaoEstoque_AcompanhamentoItens := Nil;
          end;

    end;

    if CBX_TipoRelatorio.Text = 'RELATÓRIO DE SALDO DE ESTOQUE' then
    begin

          Application.CreateForm(TRelatorio_PosicaoEstoque_Saldo, Relatorio_PosicaoEstoque_Saldo);
          try

                 If Relatorio_PosicaoEstoque_Saldo.ImprimirRelatorio = False then
                 begin
                      Application.MessageBox('Nenhum registro encontrado!','Atenção',mb_iconwarning + mb_ok);
                      Exit;
                 end
                 else
                 begin
                    Relatorio_PosicaoEstoque_Saldo.ppRelatorio.PrintReport;
                 end;

          finally

                 Relatorio_PosicaoEstoque_Saldo.Release;
                 Relatorio_PosicaoEstoque_Saldo := Nil;

          end;

    end;

    if CBX_TipoRelatorio.Text = 'RELATÓRIO DE SALDO DE ESTOQUE DAS PERDAS' then
    begin

            Application.CreateForm(TRelatorio_PosicaoEstoque_SaldoPerda, Relatorio_PosicaoEstoque_SaldoPerda);
          try

                 If Relatorio_PosicaoEstoque_SaldoPerda.ImprimirRelatorio = False then
                 begin
                      Application.MessageBox('Nenhum registro encontrado!','Atenção',mb_iconwarning + mb_ok);
                      Exit;
                 end
                 else
                 begin
                    Relatorio_PosicaoEstoque_SaldoPerda.ppRelatorio.PrintReport;
                 end;

          finally

                 Relatorio_PosicaoEstoque_SaldoPerda.Release;
                 Relatorio_PosicaoEstoque_SaldoPerda := Nil;

          end;

    end;

end;

procedure TRelatorio_PosicaoEstoque.CBX_OperadorChange(Sender: TObject);
begin
  inherited;
  PadraoBuscadorFiltro.OrganizarCampos(CBX_Operador, TXT_Valor1, TXT_Valor2, 160,'');
end;

procedure TRelatorio_PosicaoEstoque.CBX_OperadorProdutoChange(Sender: TObject);
begin
  inherited;
  PadraoBuscadorFiltro.OrganizarCampos(CBX_OperadorProduto, TXT_Valor1_Produto, TXT_Valor2_Produto, 160,'');
end;

procedure TRelatorio_PosicaoEstoque.CBX_OperadorProdutoIDChange(
  Sender: TObject);
begin
  inherited;
  PadraoBuscadorFiltro.OrganizarCampos(CBX_OperadorProdutoID, TXT_Valor1_ProdutoID, TXT_Valor2_ProdutoID, 160,'');
end;

procedure TRelatorio_PosicaoEstoque.DesenvolvimentoExecute(Sender: TObject);
begin
  inherited;
  Relatorio_PosicaoEstoque.Width := 983;

end;

procedure TRelatorio_PosicaoEstoque.FormCreate(Sender: TObject);
Var
   TamanhoPadrao : Integer;

begin
  inherited;
  TamanhoPadrao := 160;
  TXT_Valor1.Width := (TamanhoPadrao * 2) + 1;
  TXT_Valor1_ProdutoID.Width := (TamanhoPadrao * 2) + 1;
  TXT_Valor1_Produto.Width := (TamanhoPadrao * 2) + 1;
  TXT_Valor1_TipoProduto.Width := (TamanhoPadrao * 2) + 1;
  ListarArmazem;

end;

procedure TRelatorio_PosicaoEstoque.ListarArmazem;
var
   Query : TADOQuery;
   VLC_Select : String;
   VLN_Contador : Integer;

begin


  VLC_Select := VLC_Select + ' Select   ' + #13;
  VLC_Select := VLC_Select + ' 	Distinct Armazem.Z1_COD as Armazem_FK,  ' + #13;
  VLC_Select := VLC_Select + ' 	Rtrim(Armazem.Z1_COD) + ' + '''' + ' - ' + '''' + ' + Rtrim(Armazem.Z1_DESC) as Armazem  ' + #13;
  VLC_Select := VLC_Select + ' from P12OFICIAL.dbo.SZ7010 Z7 (nolock)  ' + #13;
  VLC_Select := VLC_Select + ' Inner Join P12OFICIAL.dbo.SZ1010 Armazem (nolock) ON Z1_FILIAL = Z7_FILIAL  ' + #13;
  VLC_Select := VLC_Select + ' 												                          AND Z1_COD = Z7_LOCAL   ' + #13;
  VLC_Select := VLC_Select + ' Where Z7_FILIAL  = ' + '''' + Sys_FuncaoSistema.PNL_EmpresaTotvs.Caption + '''' + #13;
  VLC_Select := VLC_Select + ' AND Z7_CUSERID = ' + '''' + Sys_FuncaoSistema.PNL_Totvs.Caption + '''' + #13;
  VLC_Select := VLC_Select + ' AND Z7.D_E_L_E_T_  <> ' + '''' + '*' + '''' + #13;
  VLC_Select := VLC_Select + ' Order by Armazem.Z1_COD ' + #13;

  Query := TADOQuery.Create(self);
  With Query do
  begin
      Close;
      Connection := Sys_ModuloConexaoDados.ADOConnection1;
      SQL.Clear;
      SQL.Text := VLC_Select;
      Open;
  end;

  MemoSQL.Lines.Text := VLC_Select;

  CBX_Igual_Armazem.Items.Clear;
  Query.First;
  CBX_Igual_Armazem.Text := Query.FieldByName('Armazem').AsString;
  For VLN_Contador := 0 To Query.RecordCount - 1 do
  begin
     CBX_Igual_Armazem.Items.Add(Query.FieldByName('Armazem').AsString);
     Query.Next;
  end;

  CBX_Igual_Armazem.Items.Add('AMBOS');
  CBX_Igual_Armazem.Text := 'AMBOS';
  Query.Free;

end;

procedure TRelatorio_PosicaoEstoque.MemoSQLDblClick(Sender: TObject);
begin
  inherited;
  Relatorio_PosicaoEstoque.Width := 693;
end;

procedure TRelatorio_PosicaoEstoque.PNL_SinalClick(Sender: TObject);
begin
  inherited;
  PadraoBuscadorFiltro.DefinirPolaridade(PNL_Sinal);
end;

procedure TRelatorio_PosicaoEstoque.PNL_SinalProdutoClick(Sender: TObject);
begin
  inherited;
  PadraoBuscadorFiltro.DefinirPolaridade(PNL_SinalProduto);
end;

procedure TRelatorio_PosicaoEstoque.PNL_SinalProdutoIDClick(Sender: TObject);
begin
  inherited;
  PadraoBuscadorFiltro.DefinirPolaridade(PNL_SinalProdutoID);
end;

end.
